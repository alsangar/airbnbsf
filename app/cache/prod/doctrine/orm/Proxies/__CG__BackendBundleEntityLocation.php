<?php

namespace Proxies\__CG__\BackendBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Location extends \BackendBundle\Entity\Location implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'BackendBundle\\Entity\\Location' . "\0" . 'id', '' . "\0" . 'BackendBundle\\Entity\\Location' . "\0" . 'name', '' . "\0" . 'BackendBundle\\Entity\\Location' . "\0" . 'canonicalName', '' . "\0" . 'BackendBundle\\Entity\\Location' . "\0" . 'address', '' . "\0" . 'BackendBundle\\Entity\\Location' . "\0" . 'number', '' . "\0" . 'BackendBundle\\Entity\\Location' . "\0" . 'other', '' . "\0" . 'BackendBundle\\Entity\\Location' . "\0" . 'zip', '' . "\0" . 'BackendBundle\\Entity\\Location' . "\0" . 'latitude', '' . "\0" . 'BackendBundle\\Entity\\Location' . "\0" . 'longitude', '' . "\0" . 'BackendBundle\\Entity\\Location' . "\0" . 'entreCalleUno', '' . "\0" . 'BackendBundle\\Entity\\Location' . "\0" . 'entreCalleDos', '' . "\0" . 'BackendBundle\\Entity\\Location' . "\0" . 'barrio', '' . "\0" . 'BackendBundle\\Entity\\Location' . "\0" . 'city');
        }

        return array('__isInitialized__', '' . "\0" . 'BackendBundle\\Entity\\Location' . "\0" . 'id', '' . "\0" . 'BackendBundle\\Entity\\Location' . "\0" . 'name', '' . "\0" . 'BackendBundle\\Entity\\Location' . "\0" . 'canonicalName', '' . "\0" . 'BackendBundle\\Entity\\Location' . "\0" . 'address', '' . "\0" . 'BackendBundle\\Entity\\Location' . "\0" . 'number', '' . "\0" . 'BackendBundle\\Entity\\Location' . "\0" . 'other', '' . "\0" . 'BackendBundle\\Entity\\Location' . "\0" . 'zip', '' . "\0" . 'BackendBundle\\Entity\\Location' . "\0" . 'latitude', '' . "\0" . 'BackendBundle\\Entity\\Location' . "\0" . 'longitude', '' . "\0" . 'BackendBundle\\Entity\\Location' . "\0" . 'entreCalleUno', '' . "\0" . 'BackendBundle\\Entity\\Location' . "\0" . 'entreCalleDos', '' . "\0" . 'BackendBundle\\Entity\\Location' . "\0" . 'barrio', '' . "\0" . 'BackendBundle\\Entity\\Location' . "\0" . 'city');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Location $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setCanonicalName($canonicalName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCanonicalName', array($canonicalName));

        return parent::setCanonicalName($canonicalName);
    }

    /**
     * {@inheritDoc}
     */
    public function getCanonicalName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCanonicalName', array());

        return parent::getCanonicalName();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddress($address)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddress', array($address));

        return parent::setAddress($address);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddress', array());

        return parent::getAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumber($number)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumber', array($number));

        return parent::setNumber($number);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumber', array());

        return parent::getNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setOther($other)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOther', array($other));

        return parent::setOther($other);
    }

    /**
     * {@inheritDoc}
     */
    public function getOther()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOther', array());

        return parent::getOther();
    }

    /**
     * {@inheritDoc}
     */
    public function setZip($zip)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setZip', array($zip));

        return parent::setZip($zip);
    }

    /**
     * {@inheritDoc}
     */
    public function getZip()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getZip', array());

        return parent::getZip();
    }

    /**
     * {@inheritDoc}
     */
    public function setLatitude($latitude)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLatitude', array($latitude));

        return parent::setLatitude($latitude);
    }

    /**
     * {@inheritDoc}
     */
    public function getLatitude()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLatitude', array());

        return parent::getLatitude();
    }

    /**
     * {@inheritDoc}
     */
    public function setLongitude($longitude)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLongitude', array($longitude));

        return parent::setLongitude($longitude);
    }

    /**
     * {@inheritDoc}
     */
    public function getLongitude()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLongitude', array());

        return parent::getLongitude();
    }

    /**
     * {@inheritDoc}
     */
    public function setEntreCalleUno($entreCalleUno)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEntreCalleUno', array($entreCalleUno));

        return parent::setEntreCalleUno($entreCalleUno);
    }

    /**
     * {@inheritDoc}
     */
    public function getEntreCalleUno()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntreCalleUno', array());

        return parent::getEntreCalleUno();
    }

    /**
     * {@inheritDoc}
     */
    public function setEntreCalleDos($entreCalleDos)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEntreCalleDos', array($entreCalleDos));

        return parent::setEntreCalleDos($entreCalleDos);
    }

    /**
     * {@inheritDoc}
     */
    public function getEntreCalleDos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntreCalleDos', array());

        return parent::getEntreCalleDos();
    }

    /**
     * {@inheritDoc}
     */
    public function setBarrio($barrio)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBarrio', array($barrio));

        return parent::setBarrio($barrio);
    }

    /**
     * {@inheritDoc}
     */
    public function getBarrio()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBarrio', array());

        return parent::getBarrio();
    }

    /**
     * {@inheritDoc}
     */
    public function setCity(\BackendBundle\Entity\City $city = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCity', array($city));

        return parent::setCity($city);
    }

    /**
     * {@inheritDoc}
     */
    public function getCity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCity', array());

        return parent::getCity();
    }

}
