<?php

namespace Proxies\__CG__\BackendBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Invoices extends \BackendBundle\Entity\Invoices implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'BackendBundle\\Entity\\Invoices' . "\0" . 'id', '' . "\0" . 'BackendBundle\\Entity\\Invoices' . "\0" . 'name', '' . "\0" . 'BackendBundle\\Entity\\Invoices' . "\0" . 'address', '' . "\0" . 'BackendBundle\\Entity\\Invoices' . "\0" . 'city', '' . "\0" . 'BackendBundle\\Entity\\Invoices' . "\0" . 'state', '' . "\0" . 'BackendBundle\\Entity\\Invoices' . "\0" . 'country', '' . "\0" . 'BackendBundle\\Entity\\Invoices' . "\0" . 'fiscalid', '' . "\0" . 'BackendBundle\\Entity\\Invoices' . "\0" . 'subtotal', '' . "\0" . 'BackendBundle\\Entity\\Invoices' . "\0" . 'vatType', '' . "\0" . 'BackendBundle\\Entity\\Invoices' . "\0" . 'vat', '' . "\0" . 'BackendBundle\\Entity\\Invoices' . "\0" . 'retentionType', '' . "\0" . 'BackendBundle\\Entity\\Invoices' . "\0" . 'retentionVat', '' . "\0" . 'BackendBundle\\Entity\\Invoices' . "\0" . 'amount', '' . "\0" . 'BackendBundle\\Entity\\Invoices' . "\0" . 'dateadd', '' . "\0" . 'BackendBundle\\Entity\\Invoices' . "\0" . 'dateviewed', '' . "\0" . 'BackendBundle\\Entity\\Invoices' . "\0" . 'user');
        }

        return array('__isInitialized__', '' . "\0" . 'BackendBundle\\Entity\\Invoices' . "\0" . 'id', '' . "\0" . 'BackendBundle\\Entity\\Invoices' . "\0" . 'name', '' . "\0" . 'BackendBundle\\Entity\\Invoices' . "\0" . 'address', '' . "\0" . 'BackendBundle\\Entity\\Invoices' . "\0" . 'city', '' . "\0" . 'BackendBundle\\Entity\\Invoices' . "\0" . 'state', '' . "\0" . 'BackendBundle\\Entity\\Invoices' . "\0" . 'country', '' . "\0" . 'BackendBundle\\Entity\\Invoices' . "\0" . 'fiscalid', '' . "\0" . 'BackendBundle\\Entity\\Invoices' . "\0" . 'subtotal', '' . "\0" . 'BackendBundle\\Entity\\Invoices' . "\0" . 'vatType', '' . "\0" . 'BackendBundle\\Entity\\Invoices' . "\0" . 'vat', '' . "\0" . 'BackendBundle\\Entity\\Invoices' . "\0" . 'retentionType', '' . "\0" . 'BackendBundle\\Entity\\Invoices' . "\0" . 'retentionVat', '' . "\0" . 'BackendBundle\\Entity\\Invoices' . "\0" . 'amount', '' . "\0" . 'BackendBundle\\Entity\\Invoices' . "\0" . 'dateadd', '' . "\0" . 'BackendBundle\\Entity\\Invoices' . "\0" . 'dateviewed', '' . "\0" . 'BackendBundle\\Entity\\Invoices' . "\0" . 'user');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Invoices $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddress($address)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddress', array($address));

        return parent::setAddress($address);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddress', array());

        return parent::getAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setCity($city)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCity', array($city));

        return parent::setCity($city);
    }

    /**
     * {@inheritDoc}
     */
    public function getCity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCity', array());

        return parent::getCity();
    }

    /**
     * {@inheritDoc}
     */
    public function setState($state)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setState', array($state));

        return parent::setState($state);
    }

    /**
     * {@inheritDoc}
     */
    public function getState()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getState', array());

        return parent::getState();
    }

    /**
     * {@inheritDoc}
     */
    public function setCountry($country)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCountry', array($country));

        return parent::setCountry($country);
    }

    /**
     * {@inheritDoc}
     */
    public function getCountry()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCountry', array());

        return parent::getCountry();
    }

    /**
     * {@inheritDoc}
     */
    public function setFiscalid($fiscalid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFiscalid', array($fiscalid));

        return parent::setFiscalid($fiscalid);
    }

    /**
     * {@inheritDoc}
     */
    public function getFiscalid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFiscalid', array());

        return parent::getFiscalid();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubtotal($subtotal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubtotal', array($subtotal));

        return parent::setSubtotal($subtotal);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubtotal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubtotal', array());

        return parent::getSubtotal();
    }

    /**
     * {@inheritDoc}
     */
    public function setVatType($vatType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVatType', array($vatType));

        return parent::setVatType($vatType);
    }

    /**
     * {@inheritDoc}
     */
    public function getVatType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVatType', array());

        return parent::getVatType();
    }

    /**
     * {@inheritDoc}
     */
    public function setVat($vat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVat', array($vat));

        return parent::setVat($vat);
    }

    /**
     * {@inheritDoc}
     */
    public function getVat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVat', array());

        return parent::getVat();
    }

    /**
     * {@inheritDoc}
     */
    public function setRetentionType($retentionType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRetentionType', array($retentionType));

        return parent::setRetentionType($retentionType);
    }

    /**
     * {@inheritDoc}
     */
    public function getRetentionType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRetentionType', array());

        return parent::getRetentionType();
    }

    /**
     * {@inheritDoc}
     */
    public function setRetentionVat($retentionVat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRetentionVat', array($retentionVat));

        return parent::setRetentionVat($retentionVat);
    }

    /**
     * {@inheritDoc}
     */
    public function getRetentionVat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRetentionVat', array());

        return parent::getRetentionVat();
    }

    /**
     * {@inheritDoc}
     */
    public function setAmount($amount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAmount', array($amount));

        return parent::setAmount($amount);
    }

    /**
     * {@inheritDoc}
     */
    public function getAmount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAmount', array());

        return parent::getAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateadd($dateadd)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateadd', array($dateadd));

        return parent::setDateadd($dateadd);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateadd()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateadd', array());

        return parent::getDateadd();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateviewed($dateviewed)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateviewed', array($dateviewed));

        return parent::setDateviewed($dateviewed);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateviewed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateviewed', array());

        return parent::getDateviewed();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\BackendBundle\Entity\User $user = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', array($user));

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', array());

        return parent::getUser();
    }

}
