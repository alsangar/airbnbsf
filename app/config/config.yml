imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: fos/fos_user.yml }
    - { resource: sonata/sonata_block.yml }
    - { resource: sonata/sonata_classification.yml }
    - { resource: sonata/sonata_media.yml }
    - { resource: "@BackendBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration


framework:
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.root_dir%/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id: ~
    fragments: ~
    http_method_override: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.root_dir%/data/data.db3'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'
        types:
            json: Sonata\Doctrine\Types\JsonType
    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        #naming_strategy: doctrine.orm.naming_strategy.underscore
        #auto_mapping: true
        entity_managers:
            default:
                mappings:
                    payum:
                        is_bundle: false
                        type: xml
                        dir: %kernel.root_dir%/../vendor/payum/core/Payum/Core/Bridge/Doctrine/Resources/mapping

                        # set this dir instead if you use `payum/payum` library
                        #dir: %kernel.root_dir%/../vendor/payum/payum/src/Payum/Core/Bridge/Doctrine/Resources/mapping

                        prefix: Payum\Core\Model
                    ApplicationSonataMediaBundle: ~
                    SonataMediaBundle: ~                    
                auto_mapping: true
    dbal:
        types:
            json: Sonata\Doctrine\Types\JsonType

sonata_media:
    # if you don't use default namespace configuration
    #class:
    #    media: MyVendor\MediaBundle\Entity\Media
    #    gallery: MyVendor\MediaBundle\Entity\Gallery
    #    gallery_has_media: MyVendor\MediaBundle\Entity\GalleryHasMedia
    db_driver: doctrine_orm # or doctrine_mongodb, doctrine_phpcr it is mandatory to choose one here
    default_context: default # you need to set a context
    contexts:
        default:  # the default context is mandatory
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file
                - sonata.media.provider.vimeo

            formats:
                small: { width: 100 , quality: 70}
                big:   { width: 500 , quality: 70}

    cdn:
        server:
            path: /uploads/media # http://media.sonata-project.org/

    filesystem:
        local:
            directory:  "%kernel.root_dir%/../web/uploads/media"
            create:     false

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

# Easy admin Configuration
easy_admin:
    site_name: 'Eerbianbí'
    design:
        menu: 
        - { entity: 'User', label: 'Usuarios', icon: 'group' }
        - label: 'Productos'
          icon: 'rocket'
          children:
            - { entity: 'Products', label: 'Productos', icon: 'briefcase' }
            - { entity: 'ProductDescription', label: 'Descripciones', icon: 'pencil' }
            - { entity: 'ProductPrices', label: 'Precios', icon: 'eur' }
            - { entity: 'Features', label: 'Características', icon: 'gears' }
            - { entity: 'Location', label: 'Tags', icon: 'map-marker' }
        - label: 'Acerca de'
          icon: 'info'
          children:          
                - { label: 'Docs', url: 'http://example.com/external-docs' }
    entities:
        - BackendBundle\Entity\Products
        - BackendBundle\Entity\ProductDescription
        - BackendBundle\Entity\ProductPrices
        - BackendBundle\Entity\Features
        - BackendBundle\Entity\Location
        - BackendBundle\Entity\User

services:
    app.form.profile:
        class: BackendBundle\Form\fos_user\ProfileFormType
        arguments: [%fos_user.model.user.class%]
        tags:
            - { name: form.type, alias: fos_user_profile_edit }
    app.form.registration:
        class: BackendBundle\Form\fos_user\RegistrationFormType
        arguments: [%fos_user.model.user.class%]
        tags:
            - { name: form.type, alias: fos_user_registration }
fos_user:
    # ...
    registration:
        form:
            type: BackendBundle\Form\fos_user\RegistrationFormType
    profile:
        form:
            type: BackendBundle\Form\fos_user\ProfileFormType

vich_uploader:
    db_driver: orm
    
    mappings:
        profile_image:
            uri_prefix:         uploads/images/profile
            upload_destination: '%kernel.root_dir%/../web/uploads/images/profile'