<?php

namespace BackendBundle\Repository;

/**
 * ProductsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductsRepository extends \Doctrine\ORM\EntityRepository
{
    public function findIndexProperties($limit,$lang,$loc = null) {
        $qb = $this->createQueryBuilder("e");
//        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb
            ->select('e.title as name,d.title,d.description,c.name as city, lo as location')
//            ->from('\BackendBundle\Entity\Products','e')
            ->join('\BackendBundle\Entity\ProductDescription','d', 'WITH', 'e = d.product')
            ->join('\BackendBundle\Entity\Languages','l', 'WITH', 'l = d.language')
            ->join('\BackendBundle\Entity\Location','lo', 'WITH', 'lo = e.location')
            ->join('\BackendBundle\Entity\City','c', 'WITH', 'c = lo.city')
            ->where('l.iso = :lang')
            ->andWhere('e.published = :pub')
            ->setParameter('lang',$lang)
            ->setParameter('pub','1')
            ->setMaxResults($limit)
            ->setFirstResult(0)
        ;
        if ($loc != null) {
            $qb
                ->andWhere('e.location = :loc')
                ->setParameter('loc',$loc)
            ;
        }
        $result = $qb->getQuery()->getResult();

        return $result;
    }

    public function findOneProperty($lang) {
        $qb = $this->createQueryBuilder("e");
        $qb
            ->select('e.title as name,d.title,d.description,c.name as city, lo as location, e.capacity, e.gallery')
            ->join('\BackendBundle\Entity\ProductDescription','d', 'WITH', 'e = d.product')
            ->join('\BackendBundle\Entity\Languages','l', 'WITH', 'l = d.language')
            ->join('\BackendBundle\Entity\Location','lo', 'WITH', 'lo = e.location')
            ->join('\BackendBundle\Entity\City','c', 'WITH', 'c = lo.city')
            ->where('l.iso = :lang')
            ->andWhere('e.published = :pub')
            ->setParameter('lang',$lang)
            ->setParameter('pub','1')
            ->setMaxResults(1)
        ;
        $result = $qb->getQuery()->getOneOrNullResult();

        return $result;
    }
}
